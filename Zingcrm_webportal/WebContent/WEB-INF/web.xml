<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>SalesLead</display-name>
  <welcome-file-list>
    <welcome-file>/</welcome-file>
  </welcome-file-list>
  <servlet>
	<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

  <session-config>
         <session-timeout>300</session-timeout>
   </session-config>


	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		/WEB-INF/hibernate-config.xml	
		/WEB-INF/spring-security.xml
		/WEB-INF/spring-servlet.xml	
		/WEB-INF/mail.xml
		/WEB-INF/connectors-config.xml
		</param-value>
	</context-param>

	<listener>
		<!-- <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<filter>
     <filter-name>LoginFilter</filter-name>
    <filter-class>com.zingcrm.filters.LoginFilter</filter-class>
   
  </filter>
  <filter-mapping>
    <filter-name>LoginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
 <!-- <listener>
    <listener-class>wms.controller.PropertyLoaderMgmt</listener-class>
  </listener>	 -->
	<!-- Spring Security  -->
	
	<!--  <servlet>
        <servlet-name>JSCSSMergeServlet</servlet-name>
        <servlet-class>com.googlecode.webutilities.servlets.JSCSSMergeServlet</servlet-class>
 </servlet>
 
 <servlet-mapping>
   <servlet-name>JSCSSMergeServlet</servlet-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.json</url-pattern>
   <url-pattern>*.css</url-pattern>
  
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.PNG</url-pattern>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.JPG</url-pattern>
    <url-pattern>*.ico</url-pattern>
 </servlet-mapping>  -->
 
 <!-- <filter>
     <filter-name>compressionFilter</filter-name>
    <filter-class>com.googlecode.webutilities.filters.CompressionFilter</filter-class>
    <init-param>
      <param-name>compressionThreshold</param-name>
      <param-value>1024</param-value>
    </init-param>
    <init-param>
      <param-name>ignoreURLPattern</param-name>
      <param-value>.*\.(tiff|bmp|mpg)</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>compressionFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>   -->
 
  <!-- <filter>
        <filter-name>responseCacheFilter</filter-name>
        <filter-class>com.googlecode.webutilities.filters.ResponseCacheFilter</filter-class>
 </filter>
 
 <filter-mapping>
   <filter-name>responseCacheFilter</filter-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.json</url-pattern>
   <url-pattern>*.css</url-pattern>
 </filter-mapping> 
 
 
  <filter>
	    <filter-name>GZIPFilter</filter-name>
	    <filter-class>com.cj.gzipflt.GzipFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	    <url-pattern>*.jsp</url-pattern>
	</filter-mapping>  -->
	
 <!-- <filter>
	    <filter-name>GZIPFilter</filter-name>
	    <filter-class>com.ho.filter.GZIPFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>GZIPFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>  -->
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
                  org.springframework.web.filter.DelegatingFilterProxy
                </filter-class>
	</filter>
 
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	  
  
  <!-- <filter>
        <filter-name>yuiMinFilter</filter-name>
        <filter-class>com.googlecode.webutilities.filters.YUIMinFilter</filter-class>
 </filter>
 
 <filter-mapping>
   <filter-name>yuiMinFilter</filter-name>
   <url-pattern>*.js</url-pattern>
   <url-pattern>*.json</url-pattern>
   <url-pattern>*.css</url-pattern>
 </filter-mapping> -->
	<!--  <filter>
         <filter-name>cross-origin</filter-name>
          <filter-class>org.eclipse.jetty.servlets.CrossOriginFilter</filter-class>
      <init-param>
         <param-name>allowedOrigins</param-name>
         <param-value>*</param-value>
      </init-param>
      <init-param>
         <param-name>allowedMethods</param-name>
         <param-value>*</param-value>
      </init-param>
      <init-param>
          <param-name>allowedHeaders</param-name>
          <param-value>*</param-value>
      </init-param>
    </filter>
    <filter-mapping>
         <filter-name>cross-origin</filter-name>
            <url-pattern>/WMS/*</url-pattern>
    </filter-mapping> -->
<!--   <servlet>
  <servlet-name>Jersey REST Service</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>com.lead.restservice;org.codehaus.jackson.jaxrs</param-value>
        </init-param>
     <init-param> 
         <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
        <param-value>com.lead.utility.ResponseCorsFilter</param-value>
     </init-param>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Jersey REST Service</servlet-name>
    <url-pattern>/zing/*</url-pattern>
  </servlet-mapping>  -->
  <servlet>
    <servlet-name>Jersey REST Service</servlet-name>
    <servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
    <init-param>
      <param-name>com.sun.jersey.config.property.packages</param-name>
      <param-value>com.lead.restservice;org.codehaus.jackson.jaxrs</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Jersey REST Service</servlet-name>
    <url-pattern>/zing/*</url-pattern>
  </servlet-mapping> 
</web-app>